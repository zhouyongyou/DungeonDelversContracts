const fs = require('fs');
const path = require('path');
const chalk = require('chalk');

// V25 正確的合約地址（2025-08-03 部署）
const V25_ADDRESSES = {
  // 核心合約
  ORACLE_ADDRESS: "0xdbf49cd5708C56b8b0848233b754b418806D7018",
  DUNGEONCORE_ADDRESS: "0x2953ed03825b40e9c1EBa1cAe5FBD47f20A4823d",
  
  // 遊戲機制合約
  PLAYERVAULT_ADDRESS: "0x7085b353f553225B6001Ba23ECCb39611fBa31Bf",
  PLAYERPROFILE_ADDRESS: "0x481ABDF19E41Bf2cE84075174675626aa027fE82",
  VIPSTAKING_ADDRESS: "0xC0D8C84e28E5BcfC9cBD109551De53BA04e7328C",
  DUNGEONSTORAGE_ADDRESS: "0x22bbcF5411c991A5DE7774Ace435DcBF69EF0a8a",
  DUNGEONMASTER_ADDRESS: "0x9e17c01A610618223d49D64E322DC1b6360E4E8D",
  ALTAROFASCENSION_ADDRESS: "0xB102a57eD4697f7A721541fd7B0bba8D6bdF63a5",
  
  // NFT 合約
  HERO_ADDRESS: "0x001b7462B0f1Ab832c017a6f09133932Be140b18",
  RELIC_ADDRESS: "0xdd8E52cD1d248D04C306c038780315a03866B402",
  PARTY_ADDRESS: "0x382024850E08AB37E290315fc5f3692b8D6646EB",
  
  // 複用的合約
  SOULSHARD_ADDRESS: "0x97B2C2a9A11C7b6A020b4bAEaAd349865eaD0bcF",
  UNISWAP_POOL_ADDRESS: "0x1e5Cd5F386Fb6F39cD8788675dd3A5ceB6521C82",
  USD_TOKEN_ADDRESS: "0x7C67Af4EBC6651c95dF78De11cfe325660d935FE",
  DUNGEONMASTERWALLET_ADDRESS: "0x10925A7138649C7E1794CE646182eeb5BF8ba647"
};

async function updateMasterConfig() {
  console.log(chalk.cyan('\n=================================================='));
  console.log(chalk.cyan('🔄 更新 master-config.json 為 V25 地址'));
  console.log(chalk.cyan('==================================================\n'));
  
  const masterConfigPath = path.join(__dirname, '../../config/master-config.json');
  
  // 備份現有配置
  if (fs.existsSync(masterConfigPath)) {
    const backupPath = masterConfigPath + '.backup-' + Date.now();
    fs.copyFileSync(masterConfigPath, backupPath);
    console.log(chalk.green(`✅ 已備份到: ${backupPath}`));
  }
  
  // 讀取現有配置或創建新的
  let masterConfig;
  if (fs.existsSync(masterConfigPath)) {
    masterConfig = JSON.parse(fs.readFileSync(masterConfigPath, 'utf8'));
  } else {
    masterConfig = {
      version: "1.0.0",
      lastUpdated: new Date().toISOString(),
      network: {
        name: "BSC Mainnet",
        chainId: 56,
        rpcUrl: "https://bsc-dataseed.binance.org/"
      },
      contracts: {
        mainnet: {},
        testnet: {}
      },
      subgraph: {
        version: "v3.5.6",
        endpoint: "https://api.thegraph.com/subgraphs/name/sotadic/dungeon-delvers"
      }
    };
  }
  
  // 更新主網地址
  masterConfig.contracts.mainnet = {
    ...masterConfig.contracts.mainnet,
    ...V25_ADDRESSES
  };
  
  // 更新版本和時間
  masterConfig.version = "1.1.0";
  masterConfig.lastUpdated = new Date().toISOString();
  masterConfig.deploymentInfo = {
    v25: {
      date: "2025-08-03",
      startBlock: 56291866,
      deployer: V25_ADDRESSES.DUNGEONMASTERWALLET_ADDRESS,
      notes: [
        "Commit-Reveal 機制實施",
        "統一機率系統",
        "強制揭示固定分布"
      ]
    }
  };
  
  // 寫入更新後的配置
  fs.writeFileSync(
    masterConfigPath,
    JSON.stringify(masterConfig, null, 2)
  );
  
  console.log(chalk.green('✅ master-config.json 已更新'));
  
  // 顯示更新的地址
  console.log(chalk.yellow('\n更新的地址:'));
  Object.entries(V25_ADDRESSES).forEach(([key, value]) => {
    console.log(`${key}: ${value}`);
  });
  
  // 創建 .env.v25 文件
  const envContent = Object.entries(V25_ADDRESSES)
    .map(([key, value]) => `${key}=${value}`)
    .join('\n');
  
  const envPath = path.join(__dirname, '../../.env.v25');
  fs.writeFileSync(envPath, envContent);
  console.log(chalk.green(`\n✅ 創建 .env.v25 文件`));
  
  console.log(chalk.cyan('\n下一步:'));
  console.log('1. 執行同步腳本: npm run sync:v25');
  console.log('2. 部署子圖: cd subgraph && ./deploy.sh v3.5.6');
  console.log('3. 更新前端配置');
  console.log('4. 更新後端配置');
}

updateMasterConfig()
  .then(() => {
    console.log(chalk.green('\n✅ 配置更新完成！'));
    process.exit(0);
  })
  .catch((error) => {
    console.error(chalk.red('\n❌ 更新失敗:'), error);
    process.exit(1);
  });